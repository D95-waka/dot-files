## sway hotkey configuration

set $up k
set $down j
set $left h
set $right l

floating_modifier $mod

# resize window (you can also use the mouse for that)
mode "resize" bindsym {
	$left       resize shrink width 5 px
	$down       resize grow height 5 px
	$up         resize shrink height 5 px
	$right      resize grow width 5 px

	Return mode "default"
	Escape mode "default"
	$mod+r mode "default"
}

bindsym --to-code {

$mod+grave exec \
	$TERMINAL

$mod+Shift+q kill

$mod+r exec \
	fuzzel

# change focus
$mod+$left focus left
$mod+$down focus down
$mod+$up focus up
$mod+$right focus right

# move focused window
$mod+Shift+$left move left
$mod+Shift+$down move down
$mod+Shift+$up move up
$mod+Shift+$right move right

# toggle fullscreen mode for the focused container
$mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#$mod+s layout stacking
$mod+b layout tabbed
$mod+g layout toggle split
$mod+v split v

# toggle tiling / floating
$mod+Shift+o floating toggle

# change focus between tiling / floating windows
$mod+o focus mode_toggle

# focus the parent container
$mod+a focus parent

# focus the child container
$mod+d focus child

# move the currently focused window to the scratchpad
$mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
$mod+minus scratchpad show

# switch to workspace
$mod+1 workspace $ws1
$mod+2 workspace $ws2
$mod+3 workspace $ws3
$mod+4 workspace $ws4
$mod+5 workspace $ws5
$mod+6 workspace $ws6
$mod+7 workspace $ws7
$mod+8 workspace $ws8
$mod+9 workspace $ws9
$mod+0 workspace $ws10

# move focused container to workspace
$mod+Shift+1 move container to workspace $ws1
$mod+Shift+2 move container to workspace $ws2
$mod+Shift+3 move container to workspace $ws3
$mod+Shift+4 move container to workspace $ws4
$mod+Shift+5 move container to workspace $ws5
$mod+Shift+6 move container to workspace $ws6
$mod+Shift+7 move container to workspace $ws7
$mod+Shift+8 move container to workspace $ws8
$mod+Shift+9 move container to workspace $ws9
$mod+Shift+0 move container to workspace $ws10

# Cycle between workspaces
$mod+Tab workspace next_on_output
$mod+Shift+Tab workspace prev_on_output

# reload the configuration file
$mod+Shift+c reload

# restart sway
$mod+Shift+r restart

# enter resize mode
$mod+t mode "resize"

# mirror second monitor
$mod+m exec \
	"swaymsg -t get_outputs | jq -r '.[] | select(.focused == false) | .name' | xargs wl-mirror"

# dismiss current notification
$mod+n exec \
	makoctl dismiss

# dismiss all open notifications
$mod+Shift+n exec \
	makoctl dismiss --all
#
# enable display lock-screen
$mod+c exec \
	'$HOME/.config/sway/scripts/lock.sh capture blur lock clean suspend'

# lower current audio device volume level
XF86AudioLowerVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"	$(wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-; wpctl get-volume @DEFAULT_AUDIO_SINK@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# raise current audio device volume level
XF86AudioRaiseVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"	$(wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+; wpctl get-volume @DEFAULT_AUDIO_SINK@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# toggle current audio device
XF86AudioMute exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"	$(wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle; wpctl get-volume @DEFAULT_AUDIO_SINK@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# lower current audio capturing device volume level
Shift+XF86AudioLowerVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"󰢳	$(wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 5%-; wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# raise current audio capturing device volume level
Shift+XF86AudioRaiseVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"󰢴	$(wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 5%+; wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# toggle current audio capturing device
XF86AudioMicMute exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
	"󰍬	$(wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle; wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | \
		awk '{ if ($3 == "[MUTED]") print \"mute\"; else print $2 * 100 \"%\"; }')"

# cycle between languages, note that the language change itself is configured through the output configuration
$mod+space exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
		"󰗊	$(swaymsg -t get_inputs | jq -r '[.[] | select( .type == "keyboard" )] | .[0].xkb_active_layout_name' | sed 's/ .*$//')"

# raise screen brightness level
XF86MonBrightnessUp exec \
	light -A 5% | \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰃟	$(light -g | sed 's/\..*//')%"

# lower screen brightness level
XF86MonBrightnessDown exec \
	light -U 5% | \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰃟	$(light -g | sed 's/\..*//')%"

# toggle system dark-mode via dedicated script
Shift+XF86MonBrightnessUp exec \
	'~/.config/scripts/darkmode.sh toggle'

# didn't think what to set this to yet
XF86Favorites exec  \
	notify-send -h string:x-dunst-stack-tag:special -t 500 "FAVORITES"

# didn't think what to set this to yet
XF86Calculator exec  \
	notify-send -h string:x-dunst-stack-tag:special -t 500 "CALCULATOR"

# capture whole screen
Print exec \
	'$HOME/.config/sway/scripts/screen_capture.sh screen'

# capture screen selection
Print+Shift exec  \
	'$HOME/.config/sway/scripts/screen_capture.sh selection'

# capture screen window
Print+Ctrl exec  \
	'$HOME/.config/sway/scripts/screen_capture.sh region'

# capture screen selection
XF86Cut exec  \
	'$HOME/.config/sway/scripts/screen_capture.sh selection'

# capture screen window
$mod+XF86Cut exec  \
	'$HOME/.config/sway/scripts/screen_capture.sh region'

}

# touchpad gestures setting
bindgesture swipe:3:right workspace next
bindgesture swipe:3:left workspace prev

bindgesture swipe:4:left move left
bindgesture swipe:4:right move right
bindgesture swipe:4:down move down
bindgesture swipe:4:up move up

bindgesture hold:4 exec $TERMINAL

# vim: set syntax=sh
